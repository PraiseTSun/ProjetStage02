swagger: "2.0"
info:
  title: OSE Killer
  description: API pour une plateforme de gestion de stage
  version: 1.0.0
host: localhost:8080
schemes:
  - http
paths:
  /student/login:
    post:
      summary: Retourne le token de l'étudiant si valide.
      parameters:
        - in: body
          name: Paramètres
          description: Adresse courriel et mot de passe
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      produces:
        - application/json
      responses:
        201:
          description: Token
          schema:
            type: object
            properties:
              token:
                type: string
        403:
          description: Courriel et/ou mot de passe invalide
  /gestionnaire/login:
    post:
      summary: Retourne le token du gestionnaire si valide
      parameters:
        - in: body
          name: Paramètres
          description: Adresse courriel et mot de passe
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      produces:
        - application/json
      responses:
        201:
          description: Token
          schema:
            type: object
            properties:
              token:
                type: string
        403:
          description: Courriel et/ou mot de passe invalide
  /company/login:
    post:
      summary: Retourne le token de la compagnie si valide
      parameters:
        - in: body
          name: Paramètres
          description: Adresse courriel et mot de passe
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
      produces:
        - application/json
      responses:
        201:
          description: Token
          schema:
            type: object
            properties:
              token:
                type: string
        403:
          description: Courriel et/ou mot de passe invalide
  /student:
    put:
      summary: Retour d'un DTO étudiant si le token est valide.
      parameters:
        - in: body
          name: Paramètres
          description: Token de l'étudiant
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: DTO de l'étudiant
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              isConfirmed:
                type: boolean
              department:
                type: boolean
        403:
          description: Token invalide
        404:
          description: Courriel pas validé
  /gestionnaire:
    put:
      summary: Retour d'un DTO gestionnaire si le token est valide.
      parameters:
        - in: body
          name: Paramètres
          description: Token du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: DTO du gestionnaire
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              isConfirmed:
                type: boolean
              department:
                type: boolean
        403:
          description: Token invalide
        404:
          description: Courriel pas validé
  /company:
    put:
      summary: Retour d'un DTO entreprise si le token est valide.
      parameters:
        - in: body
          name: Paramètres
          description: Token de la compagnie
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: DTO de l'entreprise
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              isConfirmed:
                type: boolean
              department:
                type: boolean
        403:
          description: Token invalide
        404:
          description: Courriel pas validé
  /createStudent:
    post:
      summary: Crée un étudiant et envoie le courriel de confirmation
      parameters:
        - in: body
          name: Paramètres
          description: Objet contenant les informations de l'étudiant
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              password:
                type: string
              department:
                type: string
      produces:
        - application/json
      responses:
        201:
          description: Ne retourne pas d'objet
        409:
          description: Message d'erreur
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Message d'erreur
          schema:
            type: object
            properties:
              error:
                type: string
  /createCompany:
    post:
      summary: Crée une compagnie et envoie le courriel de confirmation
      parameters:
        - in: body
          name: Paramètres
          description: Objet contenant les informations de la compagnie
          schema:
            type: object
            properties:
              name:
                type: string
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              password:
                type: string
              department:
                type: string
      produces:
        - application/json
      responses:
        201:
          description: Ne retourne pas d'objet
        409:
          description: Message d'erreur
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Message d'erreur
          schema:
            type: object
            properties:
              error:
                type: string
  /createGestionaire:
    post:
      summary: Crée un gestionnaire et envoie le courriel de confirmation
      parameters:
        - in: body
          name: Paramètres
          description: Objet contenant les informations du gestionnaire
          schema:
            type: object
            properties:
              firstName:
                type: string
              lastName:
                type: string
              email:
                type: string
              password:
                type: string
      produces:
        - application/json
      responses:
        201:
          description: Ne retourne pas d'objet
        409:
          description: Message d'erreur
          schema:
            type: object
            properties:
              error:
                type: string
        403:
          description: Token invalide
          schema:
            type: object
            properties:
              error:
                type: string
        500:
          description: Message d'erreur
          schema:
            type: object
            properties:
              error:
                type: string
  /confirmEmail/student/{id}:
    put:
      summary: Confirme le courriel d'un étudiant
      parameters:
        - in: path
          name: id
          description: id de l'étudiant
          type: string
          required: true
      produces:
        - application/json
      responses:
        201:
          description: Ne retourne pas d'objet
        404:
          description: Message d'erreur si etudiant non trouvé
          schema:
            type: object
            properties:
              error:
                type: string
        400:
          description: Message d'erreur si email expiré
          schema:
            type: object
            properties:
              error:
                type: string
  /confirmEmail/company/{id}:
    put:
      summary: Confirme le courriel d'une compagnie
      parameters:
        - in: path
          name: id
          description: id de la compagnie
          type: string
          required: true
      produces:
        - application/json
      responses:
        201:
          description: Ne retourne pas d'objet
        404:
          description: Message d'erreur si compagnie non trouvé
          schema:
            type: object
            properties:
              error:
                type: string
        400:
          description: Message d'erreur si email expiré
          schema:
            type: object
            properties:
              error:
                type: string
  /confirmEmail/gestionnaire/{id}:
    put:
      summary: Confirme le courriel d'un gestionnaire
      parameters:
        - in: path
          name: id
          description: id du gestionnaire
          type: string
          required: true
      produces:
        - application/json
      responses:
        201:
          description: Ne retourne pas d'objet
        404:
          description: Message d'erreur si gestionnaire non trouvé
          schema:
            type: object
            properties:
              error:
                type: string
        400:
          description: Message d'erreur si email expiré
          schema:
            type: object
            properties:
              error:
                type: string
  /createOffre:
    post:
      summary: Retour d'un DTO offre avec si le pdf et le token (Compagnie) est valide.
      parameters:
        - in: body
          name: Paramètres
          description: Nom de compagie department position heures par semaine, adresse et pdf
          schema:
            type: object
            properties:
              nomDeCompagie:
                type: string
              department:
                type: string
              position:
                type: string
              heurParSemaine:
                type: integer
              adresse:
                type: string
              token:
                type: string
              pdf:
                type: array
                items:
                  type: number

      produces:
        - application/json
      responses:
        200:
          description: Ne retourne rien
        403:
          description: Le token de la compagnie n'est pas valide
        404:
          description: Les champs ne peuvent pas être vide
          schema:
            type: object
            properties:
              error:
                type: string
  /validateCV/{studentId}:
    put:
      summary: Validé un cv par son l'id de l'étudiant (Gestionnaire seulement)
      parameters:
        - in: path
          name: studentId
          description: id de l'étudiant
          type: string
          required: true
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: CV validé
        403:
          description: Token invalide ou expiré
        404:
          description: Un étudiant avec ce id n'existe pas
  /refuseCV/{studentId}:
    put:
      summary: Refuse un cv par son l'id de l'étudiant (Gestionnaire seulement)
      parameters:
        - in: path
          name: studentId
          description: id de l'étudiant
          type: string
          required: true
        - in: body
          name: cvRefuseDTO
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
              refusalReason:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: CV refusé et enlevé de la BD
        403:
          description: Token invalide ou expiré
        404:
          description: Un étudiant avec ce id n'existe pas
  /unvalidatedCvStudents:
    put:
      summary: Recevoir la liste des étudiants avec des cvs non validés
      parameters:
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Liste des étudiants avec des CVs non validé
          schema:
            type: array
            items:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                isConfirmed:
                  type: boolean
                department:
                  type: boolean
        403:
          description: Token invalide ou expiré
  /studentCv/{studentId}:
    put:
      summary: Recevoir le CV d'un étudiant
      parameters:
        - in: path
          name: studentId
          description: id de l'étudiant
          type: string
          required: true
        - in: body
          name: token
          description: Token valide du gestionnaire ou de la compagnie
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Le byte-array du cv
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  type: number
        403:
          description: Token invalide ou expiré
        404:
          description: L'étudiant avec cet id n'existe pas
  /unvalidatedStudents:
    put:
      summary: Recevoir la listes des étudiants à valider
      parameters:
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Liste des étudiants non validés
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                isConfirmed:
                  type: boolean
                department:
                  type: string
                inscriptionTimestamp:
                  type: number
                emailConfirmed:
                  type: boolean
                cv:
                  type: array
                  items:
                    type: number
        403:
          description: Token invalide
  /unvalidatedCompanies:
    put:
      summary: Recevoir la listes des compagnies à valider
      parameters:
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Liste des compagnies non validés
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                isConfirmed:
                  type: boolean
                department:
                  type: string
                inscriptionTimestamp:
                  type: number
                emailConfirmed:
                  type: boolean
                companyName:
                  type: string
        403:
          description: Token invalide
  /removeStudent/{id}:
    put:
      summary: Supprime un étudiant (Doit avoir un token gestionnaire)
      parameters:
        - in: path
          name: id
          description: id de l'étudiant
          type: string
          required: true
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: L'étudiant a été supprimé
        403:
          description: Token invalide ou expiré
        404:
          description: L'étudiant avec cet id n'existe pas
  /removeCompany/{id}:
    put:
      summary: Supprime une compagnie (Doit avoir un token gestionnaire)
      parameters:
        - in: path
          name: id
          description: id de la compagnie
          type: string
          required: true
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: La compagnie a été supprimé
        403:
          description: Token invalide ou expiré
        404:
          description: La compagnie avec cet id n'existe pas
  /validateStudent/{id}:
    put:
      summary: Valide un étudiant (Doit avoir un token gestionnaire)
      parameters:
        - in: path
          name: id
          description: id de l'étudiant
          type: string
          required: true
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: L'étudiant a été validé
        403:
          description: Token invalide ou expiré
        404:
          description: L'étudiant avec cet id n'existe pas
  /validateCompany/{id}:
    put:
      summary: Valide une compagnie (Doit avoir un token gestionnaire)
      parameters:
        - in: path
          name: id
          description: id de la compagnie
          type: string
          required: true
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: La compagnie a été validé
        403:
          description: Token invalide ou expiré
        404:
          description: La compagnie avec cet id n'existe pas
  /unvalidatedOffers:
    put:
      summary: Recevoir la listes des offres à valider
      parameters:
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Liste des offres non validés
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                department:
                  type: string
                position:
                  type: string
                heureParSemaine:
                  type: string
                adresse:
                  type: boolean
        403:
          description: Token invalide
  /validatedOffers/{year}:
    put:
      summary: Recevoir la listes des offres validées pour une session
      parameters:
        - in: path
          name: year
          description: Année de la session voulue
          type: number
          required: true
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Liste des offres validés pour une année
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                department:
                  type: string
                salaire:
                  type: string
                position:
                  type: string
                heureParSemaine:
                  type: string
                adresse:
                  type: boolean
        403:
          description: Token invalide

  /validateOffer/{id}:
    put:
      summary: Valide une offre (Doit avoir un token gestionnaire)
      parameters:
        - in: path
          name: id
          description: id de l'offre
          type: string
          required: true
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: L'offre a été validé
        403:
          description: Token invalide ou expiré
        404:
          description: L'offre avec cet id n'existe pas ou l'offre est expirée
  /removeOffer/{id}:
    put:
      summary: Supprime une offre (Doit avoir un token gestionnaire)
      parameters:
        - in: path
          name: id
          description: id de l'offre
          type: string
          required: true
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: L'offre a été supprimé
        403:
          description: Token invalide ou expiré
        404:
          description: L'offre avec cet id n'existe pas
  /uploadStudentCV:
    put:
      summary: Upload un cv (Doit avoir un token student)
      parameters:
        - in: body
          name: pdf
          description: Token valide de l'étudiant
          schema:
            type: object
            properties:
              studentId:
                type: number
              pdf:
                type: array
              token:
                type: string

      produces:
        - application/json
      responses:
        200:
          description: Le cv a été enregistré
          schema:
            type: object
            properties:
              studentId:
                type: number
              pdf:
                type: array
                items:
                  type: number
              token:
                type: string
        403:
          description: Token invalide ou expiré
        404:
          description: L'étudiant avec ce cv n'existe pas
  /offerPDF/{id}:
    put:
      summary: Upload un cv (Doit avoir un token gestionnaire)
      parameters:
        - in: path
          name: id
          description: id de l'offre
          type: string
          required: true
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Le cv a été enregistré
          schema:
            type: array
            items:
              type: number
        403:
          description: Token invalide ou expiré
        404:
          description: L'étudiant avec ce cv n'existe pas
  /unvalidatedCV:
    put:
      summary: Recevoir la listes des CVs à valider
      parameters:
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Liste des CVs non validés
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                firstName:
                  type: string
                lastName:
                  type: string
                department:
                  type: string
        403:
          description: Token invalide
  /stageOffers/{studentId}:
    put:
      summary: Recevoir la listes des offres de stage du dapartement de l'etudiant (Doit avoir le token student)

      parameters:
        - in: path
          name: studentId
          description: id de l'étudiant
          type: string
          required: true
        - in: body
          name: token
          description: Token valide de l'étudiant
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Liste des offres de stage du département
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                nomDeCompagnie:
                  type: string
                position:
                  type: string
                heureParSemaine:
                  type: string
                adresse:
                  type: string
        403:
          description: Token invalide
        404:
          description: L'étudiant avec ce cv n'existe pas
  /getOfferForStudent/{id}:
    put:
      summary: Retourne une offre (Doit avoir un token Student)
      parameters:
        - in: path
          name: id
          description: id de l'offre
          type: string
          required: true
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: L'offre a été envoyé
          schema:
            properties:
              id:
                type: string
              pdf:
                type: string
        403:
          description: Token invalide ou expiré
        404:
          description: L'offre avec cette id n'existe pas
  /applyToOffer/{studentId}_{offerId}:
    put:
      summary: Permet à l’étudiant d’appliquer à une offre de stage (Doit avoir un token Student)
      parameters:
        - in: path
          name: id
          description: id de l'étudiant
          type: string
          required: true
        - in: body
          name: token
          description: Token valide de l'étudiant
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: L'application a été réussi
          schema:
            properties:
              studentId:
                type: string
              fullName:
                type: string
              offerId:
                type: string
              company:
                type: string
        403:
          description: Token invalide ou expiré
        404:
          description: L'étudiant avec cette id n'existe pas ou l'offre avec cette id n'existe pas.
  /studentApplys/{studentId}:
    put:
      summary: Revoie les id des offres que l'étudiant a postuler (Doit avoir un token Student)
      parameters:
        - in: path
          name: id
          description: id de l'étudiant
          type: string
          required: true
        - in: body
          name: token
          description: Token valide de l'étudiant
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Revoie la liste des id des offres postulées
          schema:
            properties:
              userId:
                type: number
              contactsId:
                type: array
                items:
                  type: object
                  properties:
                    contactId:
                      type: number
        403:
          description: Token invalide ou expiré
        404:
          description: L'étudiant avec cette id n'existe pas.
  /offer/{id}/applications:
    put:
      summary: Revoie une liste des étudiants qui ont appliqués a une offre (Doit avoir un token Compagnies)
      parameters:
        - in: path
          name: id
          description: id de l'offre
          type: string
          required: true
        - in: body
          name: token
          description: Token valide de la compagnie
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Revoie la liste des étudiant pour l'offre
          schema:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                firstName:
                  type: string
                lastName:
                  type: string

        403:
          description: Token invalide ou expiré
        404:
          description: L'offre avec cet id n'existe pas.
  /getStatutValidationCV/{id}:
    put:
      summary: Renvoie le statut d'une validation de cv (Doit avoir un token étudiant)
      parameters:
        - in: path
          name: id
          description: id de l'étudiant
          type: number
          required: true
        - in: body
          name: token
          description: Token valide de l'étudiant
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Renvoie un dto de l'état validation de l'étudiant
          schema:
            type: object
            properties:
              state:
                type: string
              message:
                type: string
        403:
          description: Token invalide ou expiré
        404:
          description: L'étudiant avec cet id n'existe pas.
  /studentAcceptation/{offerId}_{studentId}:
    put:
      summary: Revoie la confirmation de l'acceptation (Doit avoir un token Compagny)
      parameters:
        - in: path
          name: id
          description: id de l'offre
          type: string
          required: true
        - in: path
          name: id
          description: id de l'étudiant
          type: string
          required: true
        - in: body
          name: token
          description: Token valide de la compagnie
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Renvoie la liste des étudiant pour l'offre
          schema:
            properties:
              id:
                type: number
              studentId:
                type: number
              studentName:
                type: string
              companyId:
                type: number
              companyName:
                type: string
        403:
          description: Token invalide ou expiré
        404:
          description: L'offre avec cet id n'existe pas ou l'étudiant avec cette id n'existe pas.
        409:
          description: La compagnie a déjà accepté cette étudiant
  /getAcceptedStudentsForOffer/{offerId}:
    put:
      summary: Revoie la liste des id étudiants qui ont été accepté à cette offre (Doit avoir un token Company)
      parameters:
        - in: path
          name: id
          description: id de l'offre
          type: string
          required: true
        - in: body
          name: token
          description: Token valide de la compagnie
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Renvoie la liste des étudiants acceptés à l'offre
          schema:
            properties:
              offerId:
                type: number
              studentsId:
                type: array
                items:
                  type: object
                  properties:
                    studentId:
                      type: number
        403:
          description: Token invalide ou expiré
        404:
          description: L'offre avec cet id n'existe pas
  /createStageContract:
    post:
      summary: Céer un entante de stage (Doit avoir un token gestionnaire)
      parameters:
        - in: body
          name: StageContractInDTO
          description: dto de StageContract en input
          schema:
            type: object
            properties:
              studentId:
                type: number
              offerId:
                type: number
        - in: body
          name: token
          description: Token valide du gestionnaire
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: L'entante de stage a été créé
        403:
          description: Token invalide ou expiré
        404:
          description: L'étudiant avec cet id n'existe pas ou l'offre avec cette id n'existe pas
        409:
          description: L'entante de stage existe déjà
  /companyContracts/{companyId}:
    put:
      summary: Renvoie les contracts qui appartient à la compagnie (Doit avoir un token Company)
      parameters:
        - in: path
          name: compagnyId
          description: id de la compagnie
          type: string
          required: true
        - in: body
          name: token
          description: Token valide de la compagnie
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Renvoie les contracts qui appartient à la compagnie
        403:
          description: Token invalide ou expiré
        404:
          description: La compagnie n'existe pas
  /companySignatureContract:
    put:
      summary: Revoie l'entente de stage signé par la compagnie et l'étudiant s'il a déjà signé (Doit avoir un token Company)
      parameters:
        - in: body
          name: CompanySignatureInDTO
          description: La dto contenant la signature de la compagnie
          schema:
            type: object
            properties:
              companyId:
                type: number
              stageContractId:
                type: number
              signature:
                type: array
                items:
                  type: number
          required: true
        - in: body
          name: token
          description: Token valide de la compagnie
          schema:
            type: object
            properties:
              token:
                type: string
      produces:
        - application/json
      responses:
        200:
          description: Revoie l'entente de stage signé par la compagnie et l'étudiant s'il a déjà signé
        403:
          description: Token invalide ou expiré
        404:
          description: La compagnie n'existe pas ou le contract n'existe pas
        409:
          description: Le contract n'appartient pas à la compagnie